/*
 * generated by Xtext 2.25.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}
@parser::members {
	private MyDslGrammarAccess grammarAccess;

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleViewModel
entryRuleViewModel
:
{ before(grammarAccess.getViewModelRule()); }
	 ruleViewModel
{ after(grammarAccess.getViewModelRule()); } 
	 EOF 
;

// Rule ViewModel
ruleViewModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getViewModelAccess().getGroup()); }
		(rule__ViewModel__Group__0)
		{ after(grammarAccess.getViewModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTable
entryRuleTable
:
{ before(grammarAccess.getTableRule()); }
	 ruleTable
{ after(grammarAccess.getTableRule()); } 
	 EOF 
;

// Rule Table
ruleTable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTableAccess().getGroup()); }
		(rule__Table__Group__0)
		{ after(grammarAccess.getTableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAbstructItem
entryRuleAbstructItem
:
{ before(grammarAccess.getAbstructItemRule()); }
	 ruleAbstructItem
{ after(grammarAccess.getAbstructItemRule()); } 
	 EOF 
;

// Rule AbstructItem
ruleAbstructItem 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbstructItemAccess().getAlternatives()); }
		(rule__AbstructItem__Alternatives)
		{ after(grammarAccess.getAbstructItemAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInt32Item
entryRuleInt32Item
:
{ before(grammarAccess.getInt32ItemRule()); }
	 ruleInt32Item
{ after(grammarAccess.getInt32ItemRule()); } 
	 EOF 
;

// Rule Int32Item
ruleInt32Item 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInt32ItemAccess().getGroup()); }
		(rule__Int32Item__Group__0)
		{ after(grammarAccess.getInt32ItemAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringItem
entryRuleStringItem
:
{ before(grammarAccess.getStringItemRule()); }
	 ruleStringItem
{ after(grammarAccess.getStringItemRule()); } 
	 EOF 
;

// Rule StringItem
ruleStringItem 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringItemAccess().getGroup()); }
		(rule__StringItem__Group__0)
		{ after(grammarAccess.getStringItemAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBindingField
entryRuleBindingField
:
{ before(grammarAccess.getBindingFieldRule()); }
	 ruleBindingField
{ after(grammarAccess.getBindingFieldRule()); } 
	 EOF 
;

// Rule BindingField
ruleBindingField 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBindingFieldAccess().getGroup()); }
		(rule__BindingField__Group__0)
		{ after(grammarAccess.getBindingFieldAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstructItem__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstructItemAccess().getInt32ItemParserRuleCall_0()); }
		ruleInt32Item
		{ after(grammarAccess.getAbstructItemAccess().getInt32ItemParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAbstructItemAccess().getStringItemParserRuleCall_1()); }
		ruleStringItem
		{ after(grammarAccess.getAbstructItemAccess().getStringItemParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getTablesAssignment_0()); }
	(rule__Model__TablesAssignment_0)*
	{ after(grammarAccess.getModelAccess().getTablesAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getViewModelsAssignment_1()); }
	(rule__Model__ViewModelsAssignment_1)*
	{ after(grammarAccess.getModelAccess().getViewModelsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ViewModel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ViewModel__Group__0__Impl
	rule__ViewModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ViewModel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getViewModelAccess().getViewModelKeyword_0()); }
	'viewModel'
	{ after(grammarAccess.getViewModelAccess().getViewModelKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ViewModel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ViewModel__Group__1__Impl
	rule__ViewModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ViewModel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getViewModelAccess().getNameAssignment_1()); }
	(rule__ViewModel__NameAssignment_1)
	{ after(grammarAccess.getViewModelAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ViewModel__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ViewModel__Group__2__Impl
	rule__ViewModel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ViewModel__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getViewModelAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getViewModelAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ViewModel__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ViewModel__Group__3__Impl
	rule__ViewModel__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ViewModel__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getViewModelAccess().getFieldsAssignment_3()); }
		(rule__ViewModel__FieldsAssignment_3)
		{ after(grammarAccess.getViewModelAccess().getFieldsAssignment_3()); }
	)
	(
		{ before(grammarAccess.getViewModelAccess().getFieldsAssignment_3()); }
		(rule__ViewModel__FieldsAssignment_3)*
		{ after(grammarAccess.getViewModelAccess().getFieldsAssignment_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ViewModel__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ViewModel__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ViewModel__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getViewModelAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getViewModelAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Table__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__0__Impl
	rule__Table__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getTableKeyword_0()); }
	'table'
	{ after(grammarAccess.getTableAccess().getTableKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__1__Impl
	rule__Table__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getNameAssignment_1()); }
	(rule__Table__NameAssignment_1)
	{ after(grammarAccess.getTableAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__2__Impl
	rule__Table__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getTableAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__3__Impl
	rule__Table__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getItemsAssignment_3()); }
	(rule__Table__ItemsAssignment_3)*
	{ after(grammarAccess.getTableAccess().getItemsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getTableAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Int32Item__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Int32Item__Group__0__Impl
	rule__Int32Item__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Int32Item__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInt32ItemAccess().getInt32Keyword_0()); }
	'int32'
	{ after(grammarAccess.getInt32ItemAccess().getInt32Keyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Int32Item__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Int32Item__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Int32Item__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInt32ItemAccess().getNameAssignment_1()); }
	(rule__Int32Item__NameAssignment_1)
	{ after(grammarAccess.getInt32ItemAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StringItem__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringItem__Group__0__Impl
	rule__StringItem__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringItem__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringItemAccess().getStringKeyword_0()); }
	'string'
	{ after(grammarAccess.getStringItemAccess().getStringKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringItem__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringItem__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringItem__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringItemAccess().getNameAssignment_1()); }
	(rule__StringItem__NameAssignment_1)
	{ after(grammarAccess.getStringItemAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BindingField__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BindingField__Group__0__Impl
	rule__BindingField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingField__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBindingFieldAccess().getFieldKeyword_0()); }
	'field'
	{ after(grammarAccess.getBindingFieldAccess().getFieldKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingField__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BindingField__Group__1__Impl
	rule__BindingField__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingField__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBindingFieldAccess().getNameAssignment_1()); }
	(rule__BindingField__NameAssignment_1)
	{ after(grammarAccess.getBindingFieldAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingField__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BindingField__Group__2__Impl
	rule__BindingField__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingField__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBindingFieldAccess().getBindsKeyword_2()); }
	'binds'
	{ after(grammarAccess.getBindingFieldAccess().getBindsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingField__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BindingField__Group__3__Impl
	rule__BindingField__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingField__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBindingFieldAccess().getTableAssignment_3()); }
	(rule__BindingField__TableAssignment_3)
	{ after(grammarAccess.getBindingFieldAccess().getTableAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingField__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BindingField__Group__4__Impl
	rule__BindingField__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingField__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBindingFieldAccess().getFullStopKeyword_4()); }
	'.'
	{ after(grammarAccess.getBindingFieldAccess().getFullStopKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingField__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BindingField__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingField__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBindingFieldAccess().getItemAssignment_5()); }
	(rule__BindingField__ItemAssignment_5)
	{ after(grammarAccess.getBindingFieldAccess().getItemAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__TablesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getTablesTableParserRuleCall_0_0()); }
		ruleTable
		{ after(grammarAccess.getModelAccess().getTablesTableParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ViewModelsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getViewModelsViewModelParserRuleCall_1_0()); }
		ruleViewModel
		{ after(grammarAccess.getModelAccess().getViewModelsViewModelParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ViewModel__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getViewModelAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getViewModelAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ViewModel__FieldsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getViewModelAccess().getFieldsBindingFieldParserRuleCall_3_0()); }
		ruleBindingField
		{ after(grammarAccess.getViewModelAccess().getFieldsBindingFieldParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTableAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__ItemsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableAccess().getItemsAbstructItemParserRuleCall_3_0()); }
		ruleAbstructItem
		{ after(grammarAccess.getTableAccess().getItemsAbstructItemParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Int32Item__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInt32ItemAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getInt32ItemAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringItem__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringItemAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getStringItemAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingField__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBindingFieldAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getBindingFieldAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingField__TableAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBindingFieldAccess().getTableTableCrossReference_3_0()); }
		(
			{ before(grammarAccess.getBindingFieldAccess().getTableTableIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getBindingFieldAccess().getTableTableIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getBindingFieldAccess().getTableTableCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BindingField__ItemAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBindingFieldAccess().getItemAbstructItemCrossReference_5_0()); }
		(
			{ before(grammarAccess.getBindingFieldAccess().getItemAbstructItemIDTerminalRuleCall_5_0_1()); }
			RULE_ID
			{ after(grammarAccess.getBindingFieldAccess().getItemAbstructItemIDTerminalRuleCall_5_0_1()); }
		)
		{ after(grammarAccess.getBindingFieldAccess().getItemAbstructItemCrossReference_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
