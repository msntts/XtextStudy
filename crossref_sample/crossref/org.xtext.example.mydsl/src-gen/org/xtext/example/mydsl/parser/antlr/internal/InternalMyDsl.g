/*
 * generated by Xtext 2.25.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}

@parser::members {

 	private MyDslGrammarAccess grammarAccess;

    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getTablesTableParserRuleCall_0_0());
				}
				lv_tables_0_0=ruleTable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"tables",
						lv_tables_0_0,
						"org.xtext.example.mydsl.MyDsl.Table");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getViewModelsViewModelParserRuleCall_1_0());
				}
				lv_viewModels_1_0=ruleViewModel
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"viewModels",
						lv_viewModels_1_0,
						"org.xtext.example.mydsl.MyDsl.ViewModel");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleViewModel
entryRuleViewModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getViewModelRule()); }
	iv_ruleViewModel=ruleViewModel
	{ $current=$iv_ruleViewModel.current; }
	EOF;

// Rule ViewModel
ruleViewModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='viewModel'
		{
			newLeafNode(otherlv_0, grammarAccess.getViewModelAccess().getViewModelKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getViewModelAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getViewModelRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getViewModelAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getViewModelAccess().getFieldsBindingFieldParserRuleCall_3_0());
				}
				lv_fields_3_0=ruleBindingField
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getViewModelRule());
					}
					add(
						$current,
						"fields",
						lv_fields_3_0,
						"org.xtext.example.mydsl.MyDsl.BindingField");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getViewModelAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleTable
entryRuleTable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTableRule()); }
	iv_ruleTable=ruleTable
	{ $current=$iv_ruleTable.current; }
	EOF;

// Rule Table
ruleTable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='table'
		{
			newLeafNode(otherlv_0, grammarAccess.getTableAccess().getTableKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getTableAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTableRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getTableAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTableAccess().getItemsAbstructItemParserRuleCall_3_0());
				}
				lv_items_3_0=ruleAbstructItem
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTableRule());
					}
					add(
						$current,
						"items",
						lv_items_3_0,
						"org.xtext.example.mydsl.MyDsl.AbstructItem");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getTableAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleAbstructItem
entryRuleAbstructItem returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbstructItemRule()); }
	iv_ruleAbstructItem=ruleAbstructItem
	{ $current=$iv_ruleAbstructItem.current; }
	EOF;

// Rule AbstructItem
ruleAbstructItem returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAbstructItemAccess().getInt32ItemParserRuleCall_0());
		}
		this_Int32Item_0=ruleInt32Item
		{
			$current = $this_Int32Item_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstructItemAccess().getStringItemParserRuleCall_1());
		}
		this_StringItem_1=ruleStringItem
		{
			$current = $this_StringItem_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleInt32Item
entryRuleInt32Item returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInt32ItemRule()); }
	iv_ruleInt32Item=ruleInt32Item
	{ $current=$iv_ruleInt32Item.current; }
	EOF;

// Rule Int32Item
ruleInt32Item returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='int32'
		{
			newLeafNode(otherlv_0, grammarAccess.getInt32ItemAccess().getInt32Keyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getInt32ItemAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInt32ItemRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleStringItem
entryRuleStringItem returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringItemRule()); }
	iv_ruleStringItem=ruleStringItem
	{ $current=$iv_ruleStringItem.current; }
	EOF;

// Rule StringItem
ruleStringItem returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='string'
		{
			newLeafNode(otherlv_0, grammarAccess.getStringItemAccess().getStringKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getStringItemAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStringItemRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleBindingField
entryRuleBindingField returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBindingFieldRule()); }
	iv_ruleBindingField=ruleBindingField
	{ $current=$iv_ruleBindingField.current; }
	EOF;

// Rule BindingField
ruleBindingField returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='field'
		{
			newLeafNode(otherlv_0, grammarAccess.getBindingFieldAccess().getFieldKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getBindingFieldAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBindingFieldRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='binds'
		{
			newLeafNode(otherlv_2, grammarAccess.getBindingFieldAccess().getBindsKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBindingFieldRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getBindingFieldAccess().getTableTableCrossReference_3_0());
				}
			)
		)
		otherlv_4='.'
		{
			newLeafNode(otherlv_4, grammarAccess.getBindingFieldAccess().getFullStopKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBindingFieldRule());
					}
				}
				otherlv_5=RULE_ID
				{
					newLeafNode(otherlv_5, grammarAccess.getBindingFieldAccess().getItemAbstructItemCrossReference_5_0());
				}
			)
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
