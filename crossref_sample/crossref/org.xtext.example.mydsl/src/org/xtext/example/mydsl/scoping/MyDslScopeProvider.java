/*
 * generated by Xtext 2.25.0
 */
package org.xtext.example.mydsl.scoping;

import java.util.ArrayList;
import java.util.List;

import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EReference;
import org.eclipse.xtext.EcoreUtil2;
import org.eclipse.xtext.scoping.IScope;
import org.eclipse.xtext.scoping.Scopes;
import org.xtext.example.mydsl.myDsl.AbstructItem;
import org.xtext.example.mydsl.myDsl.BindingField;
import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.Table;

import com.google.inject.Binding;

/**
 * This class contains custom scoping description.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#scoping
 * on how and when to use it.
 */
public class MyDslScopeProvider extends AbstractMyDslScopeProvider {
	
	@Override
	public IScope getScope(EObject context, EReference reference)
	{
		if(context instanceof BindingField
	            && reference == MyDslPackage.Literals.BINDING_FIELD__ITEM) {
	        
	        return Scopes.scopeFor(((BindingField)context).getTable().getItems());
	    }
	    return super.getScope(context, reference);
	}
}
